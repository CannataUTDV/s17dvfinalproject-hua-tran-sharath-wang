<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0207.2140                               -->
<workbook source-build='10.1.5 (10100.17.0207.2140)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.1'>
      <aliases enabled='yes' />
      <column caption='KPI Medium' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='814.0'>
        <calculation class='tableau' formula='814.0' />
        <range granularity='1.0' max='1057.0' min='814.0' />
      </column>
    </datasource>
    <datasource caption='Death' inline='true' name='federated.1dpgiui1x30a3t1e2y1j00d5bd4d' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Death' name='textscan.0z3thup1jc7pp51dultph0v6feil'>
            <connection class='textscan' directory='C:/Users/vivek/Downloads' filename='Death.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0z3thup1jc7pp51dultph0v6feil' name='Death.csv' table='[Death#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='AreaName' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='integer' name='edu.total' ordinal='2' />
            <column datatype='integer' name='edu.males' ordinal='3' />
            <column datatype='integer' name='edu.females' ordinal='4' />
            <column datatype='integer' name='m_no_school' ordinal='5' />
            <column datatype='integer' name='m_hs' ordinal='6' />
            <column datatype='integer' name='m_bs' ordinal='7' />
            <column datatype='integer' name='m_ms' ordinal='8' />
            <column datatype='integer' name='m_phd' ordinal='9' />
            <column datatype='integer' name='f_no_school' ordinal='10' />
            <column datatype='integer' name='f_hs' ordinal='11' />
            <column datatype='integer' name='f_bs' ordinal='12' />
            <column datatype='integer' name='f_ms' ordinal='13' />
            <column datatype='integer' name='f_phd' ordinal='14' />
            <column datatype='integer' name='year' ordinal='15' />
            <column datatype='string' name='cause' ordinal='16' />
            <column datatype='integer' name='amt_death' ordinal='17' />
            <column datatype='real' name='AADR' ordinal='18' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>AreaName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AreaName]</local-name>
            <parent-name>[Death.csv]</parent-name>
            <remote-alias>AreaName</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Death.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>edu.total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[edu.total]</local-name>
            <parent-name>[Death.csv]</parent-name>
            <remote-alias>edu.total</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>edu.males</remote-name>
            <remote-type>20</remote-type>
            <local-name>[edu.males]</local-name>
            <parent-name>[Death.csv]</parent-name>
            <remote-alias>edu.males</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>edu.females</remote-name>
            <remote-type>20</remote-type>
            <local-name>[edu.females]</local-name>
            <parent-name>[Death.csv]</parent-name>
            <remote-alias>edu.females</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>m_no_school</remote-name>
            <remote-type>20</remote-type>
            <local-name>[m_no_school]</local-name>
            <parent-name>[Death.csv]</parent-name>
            <remote-alias>m_no_school</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>m_hs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[m_hs]</local-name>
            <parent-name>[Death.csv]</parent-name>
            <remote-alias>m_hs</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>m_bs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[m_bs]</local-name>
            <parent-name>[Death.csv]</parent-name>
            <remote-alias>m_bs</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>m_ms</remote-name>
            <remote-type>20</remote-type>
            <local-name>[m_ms]</local-name>
            <parent-name>[Death.csv]</parent-name>
            <remote-alias>m_ms</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>m_phd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[m_phd]</local-name>
            <parent-name>[Death.csv]</parent-name>
            <remote-alias>m_phd</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>f_no_school</remote-name>
            <remote-type>20</remote-type>
            <local-name>[f_no_school]</local-name>
            <parent-name>[Death.csv]</parent-name>
            <remote-alias>f_no_school</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>f_hs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[f_hs]</local-name>
            <parent-name>[Death.csv]</parent-name>
            <remote-alias>f_hs</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>f_bs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[f_bs]</local-name>
            <parent-name>[Death.csv]</parent-name>
            <remote-alias>f_bs</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>f_ms</remote-name>
            <remote-type>20</remote-type>
            <local-name>[f_ms]</local-name>
            <parent-name>[Death.csv]</parent-name>
            <remote-alias>f_ms</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>f_phd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[f_phd]</local-name>
            <parent-name>[Death.csv]</parent-name>
            <remote-alias>f_phd</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Death.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cause</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cause]</local-name>
            <parent-name>[Death.csv]</parent-name>
            <remote-alias>cause</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>amt_death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[amt_death]</local-name>
            <parent-name>[Death.csv]</parent-name>
            <remote-alias>amt_death</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AADR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AADR]</local-name>
            <parent-name>[Death.csv]</parent-name>
            <remote-alias>AADR</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Death.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Aadr' datatype='real' name='[AADR]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Aadr (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[AADR]' peg='0' size='21' />
      </column>
      <column aggregation='None' datatype='integer' name='[Amt Death (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[amt_death]' peg='0' size='5111' />
      </column>
      <column caption='Area Name' datatype='string' name='[AreaName]' role='dimension' type='nominal' />
      <column caption='KPI - Education to Death Ratio' datatype='real' name='[Calculation_250512731217076224]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([edu.total])/sum([amt_death])' />
      </column>
      <column caption='KPI' datatype='string' name='[Calculation_250512731220058113]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF Sum([edu.total])/Sum([amt_death]) &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSEIF Sum([edu.total])/Sum([amt_death])&gt; [Parameters].[Parameter 2] THEN &quot;High&quot;&#13;&#10;ELSE &quot;Low&quot;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Edu.Females (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='6' formula='[edu.females]' peg='0' size='1.00354e+06' />
      </column>
      <column datatype='integer' name='[Edu.Total (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='6' formula='[edu.total]' peg='0' size='1.9607e+06' />
      </column>
      <column datatype='integer' name='[M Phd (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[m_phd]' peg='0' size='18489' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Count' caption='Amt Death' datatype='integer' name='[amt_death]' role='measure' type='quantitative' />
      <column caption='Cause' datatype='string' name='[cause]' role='dimension' type='nominal' />
      <column caption='Edu.Females' datatype='integer' name='[edu.females]' role='measure' type='quantitative' />
      <column caption='Edu.Males' datatype='integer' name='[edu.males]' role='measure' type='quantitative' />
      <column caption='Edu.Total' datatype='integer' name='[edu.total]' role='measure' type='quantitative' />
      <column caption='F Bs' datatype='integer' name='[f_bs]' role='measure' type='quantitative' />
      <column caption='F Hs' datatype='integer' name='[f_hs]' role='measure' type='quantitative' />
      <column caption='F Ms' datatype='integer' name='[f_ms]' role='measure' type='quantitative' />
      <column caption='F No School' datatype='integer' name='[f_no_school]' role='measure' type='quantitative' />
      <column caption='F Phd' datatype='integer' name='[f_phd]' role='measure' type='quantitative' />
      <column caption='M Bs' datatype='integer' name='[m_bs]' role='measure' type='quantitative' />
      <column caption='M Hs' datatype='integer' name='[m_hs]' role='measure' type='quantitative' />
      <column caption='M Ms' datatype='integer' name='[m_ms]' role='measure' type='quantitative' />
      <column caption='M No School' datatype='integer' name='[m_no_school]' role='measure' type='quantitative' />
      <column caption='M Phd' datatype='integer' name='[m_phd]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.164835' measure-ordering='alphabetic' measure-percentage='0.784615' parameter-percentage='0.0505495' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='KPI Medium' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='814.0'>
          <calculation class='tableau' formula='814.0' />
          <range granularity='1.0' max='1057.0' min='814.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Boxplot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Death' name='federated.1dpgiui1x30a3t1e2y1j00d5bd4d' />
          </datasources>
          <datasource-dependencies datasource='federated.1dpgiui1x30a3t1e2y1j00d5bd4d'>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='Count' caption='Amt Death' datatype='integer' name='[amt_death]' role='measure' type='quantitative' />
            <column caption='Cause' datatype='string' name='[cause]' role='dimension' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[cause]' derivation='None' name='[none:cause:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[amt_death]' derivation='Sum' name='[sum:amt_death:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[none:cause:nk]'>
            <groupfilter from='&quot;Alzheimers disease&quot;' function='range' level='[none:cause:nk]' to='&quot;Unintentional Injuries&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[none:cause:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[none:State:nk]' />
              <text column='[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[none:year:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[sum:amt_death:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[sum:amt_death:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[sum:amt_death:qk]</rows>
        <cols>[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[none:cause:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Histogram'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Histogram of AADR </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Death' name='federated.1dpgiui1x30a3t1e2y1j00d5bd4d' />
          </datasources>
          <datasource-dependencies datasource='federated.1dpgiui1x30a3t1e2y1j00d5bd4d'>
            <column caption='Aadr' datatype='real' name='[AADR]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Aadr (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='1' formula='[AADR]' peg='0' size='21' />
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Cause' datatype='string' name='[cause]' role='dimension' type='nominal' />
            <column-instance column='[AADR]' derivation='Count' name='[cnt:AADR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Aadr (bin)]' derivation='None' name='[none:Aadr (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[cause]' derivation='None' name='[none:cause:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[none:cause:nk]'>
            <groupfilter function='member' level='[none:cause:nk]' member='&quot;All Causes&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[none:year:qk]' included-values='in-range'>
            <min>2010</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[none:cause:nk]</column>
            <column>[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <text column='[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[cnt:AADR:qk]</rows>
        <cols>[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[none:Aadr (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[none:Aadr (bin):qk]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='KPI Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Death' name='federated.1dpgiui1x30a3t1e2y1j00d5bd4d' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Medium' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='814.0'>
              <calculation class='tableau' formula='814.0' />
              <range granularity='1.0' max='1057.0' min='814.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1dpgiui1x30a3t1e2y1j00d5bd4d'>
            <column caption='KPI - Education to Death Ratio' datatype='real' name='[Calculation_250512731217076224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([edu.total])/sum([amt_death])' />
            </column>
            <column caption='KPI' datatype='string' name='[Calculation_250512731220058113]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF Sum([edu.total])/Sum([amt_death]) &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSEIF Sum([edu.total])/Sum([amt_death])&gt; [Parameters].[Parameter 2] THEN &quot;High&quot;&#13;&#10;ELSE &quot;Low&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='Count' caption='Amt Death' datatype='integer' name='[amt_death]' role='measure' type='quantitative' />
            <column caption='Edu.Total' datatype='integer' name='[edu.total]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_250512731217076224]' derivation='User' name='[usr:Calculation_250512731217076224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_250512731220058113]' derivation='User' name='[usr:Calculation_250512731220058113:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[Longitude (generated)]' field-type='quantitative' max='-6454379.9296919703' min='-14425101.480414765' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[Latitude (generated)]' field-type='quantitative' max='7453462.1879996927' min='2942255.1992225563' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[usr:Calculation_250512731220058113:nk]' />
              <text column='[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[none:State:nk]' />
              <text column='[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[usr:Calculation_250512731217076224:qk]' />
              <geometry column='[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[Latitude (generated)]</rows>
        <cols>[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='KPI Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[usr:Calculation_250512731220058113:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[none:State:nk]</field>
            <field>[federated.1dpgiui1x30a3t1e2y1j00d5bd4d].[usr:Calculation_250512731220058113:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Histogram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' maximized='true' name='Boxplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Boxplot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Histogram' width='192'>
      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
      oezdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='KPI Map' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
