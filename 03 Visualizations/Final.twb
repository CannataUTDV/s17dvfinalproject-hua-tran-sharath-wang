<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0327.0758                               -->
<workbook source-build='10.1.7 (10100.17.0327.0758)' source-platform='mac' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='earnings' inline='true' name='federated.1v0zsd21b8h22n115t9go18ntkcy' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='earnings' name='textscan.05iwqa905lxk7l1c6i2p818aqw64'>
            <connection class='textscan' directory='/Users/Nina/Downloads' filename='earnings.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.05iwqa905lxk7l1c6i2p818aqw64' name='earnings.csv' table='[earnings#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='string' name='AreaName' ordinal='1' />
            <column datatype='integer' name='total' ordinal='2' />
            <column datatype='integer' name='males' ordinal='3' />
            <column datatype='integer' name='females' ordinal='4' />
            <column datatype='integer' name='m_4999_less' ordinal='5' />
            <column datatype='integer' name='m_5000_9999' ordinal='6' />
            <column datatype='integer' name='m_10000_19999' ordinal='7' />
            <column datatype='integer' name='m_20000_29999' ordinal='8' />
            <column datatype='integer' name='m_30000_39999' ordinal='9' />
            <column datatype='integer' name='m_40000_49999' ordinal='10' />
            <column datatype='integer' name='m_50000_64999' ordinal='11' />
            <column datatype='integer' name='m_65000_99999' ordinal='12' />
            <column datatype='integer' name='m_100G_more' ordinal='13' />
            <column datatype='integer' name='f_4999_less' ordinal='14' />
            <column datatype='integer' name='f_5000_9999' ordinal='15' />
            <column datatype='integer' name='f_10000_19999' ordinal='16' />
            <column datatype='integer' name='f_20000_29999' ordinal='17' />
            <column datatype='integer' name='f_30000_39999' ordinal='18' />
            <column datatype='integer' name='f_40000_49990' ordinal='19' />
            <column datatype='integer' name='f_50000_64999' ordinal='20' />
            <column datatype='integer' name='f_65000_99999' ordinal='21' />
            <column datatype='integer' name='f_100G_more' ordinal='22' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AreaName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AreaName]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>AreaName</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>total</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>males</remote-name>
            <remote-type>20</remote-type>
            <local-name>[males]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>males</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>females</remote-name>
            <remote-type>20</remote-type>
            <local-name>[females]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>females</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>m_4999_less</remote-name>
            <remote-type>20</remote-type>
            <local-name>[m_4999_less]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>m_4999_less</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>m_5000_9999</remote-name>
            <remote-type>20</remote-type>
            <local-name>[m_5000_9999]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>m_5000_9999</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>m_10000_19999</remote-name>
            <remote-type>20</remote-type>
            <local-name>[m_10000_19999]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>m_10000_19999</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>m_20000_29999</remote-name>
            <remote-type>20</remote-type>
            <local-name>[m_20000_29999]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>m_20000_29999</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>m_30000_39999</remote-name>
            <remote-type>20</remote-type>
            <local-name>[m_30000_39999]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>m_30000_39999</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>m_40000_49999</remote-name>
            <remote-type>20</remote-type>
            <local-name>[m_40000_49999]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>m_40000_49999</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>m_50000_64999</remote-name>
            <remote-type>20</remote-type>
            <local-name>[m_50000_64999]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>m_50000_64999</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>m_65000_99999</remote-name>
            <remote-type>20</remote-type>
            <local-name>[m_65000_99999]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>m_65000_99999</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>m_100G_more</remote-name>
            <remote-type>20</remote-type>
            <local-name>[m_100G_more]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>m_100G_more</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>f_4999_less</remote-name>
            <remote-type>20</remote-type>
            <local-name>[f_4999_less]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>f_4999_less</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>f_5000_9999</remote-name>
            <remote-type>20</remote-type>
            <local-name>[f_5000_9999]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>f_5000_9999</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>f_10000_19999</remote-name>
            <remote-type>20</remote-type>
            <local-name>[f_10000_19999]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>f_10000_19999</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>f_20000_29999</remote-name>
            <remote-type>20</remote-type>
            <local-name>[f_20000_29999]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>f_20000_29999</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>f_30000_39999</remote-name>
            <remote-type>20</remote-type>
            <local-name>[f_30000_39999]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>f_30000_39999</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>f_40000_49990</remote-name>
            <remote-type>20</remote-type>
            <local-name>[f_40000_49990]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>f_40000_49990</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>f_50000_64999</remote-name>
            <remote-type>20</remote-type>
            <local-name>[f_50000_64999]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>f_50000_64999</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>f_65000_99999</remote-name>
            <remote-type>20</remote-type>
            <local-name>[f_65000_99999]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>f_65000_99999</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>f_100G_more</remote-name>
            <remote-type>20</remote-type>
            <local-name>[f_100G_more]</local-name>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias>f_100G_more</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[earnings.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Area Name' datatype='string' name='[AreaName]' role='dimension' type='nominal' />
      <column caption='total_4999Less' datatype='real' name='[Calculation_165648025905897472]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([f_4999_less]+[m_4999_less])/[total]' />
      </column>
      <column caption='total_100G' datatype='real' name='[Calculation_165648025906401281]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([m_100G_more]+[f_100G_more])/[total]' />
      </column>
      <column caption='total_50k_64999' datatype='real' name='[Calculation_165648025907011586]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([m_50000_64999]+[f_50000_64999])/[total]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='F 10000 19999' datatype='integer' name='[f_10000_19999]' role='measure' type='quantitative' />
      <column caption='f 100G more' datatype='integer' name='[f_100G_more]' role='measure' type='quantitative' />
      <column caption='F 20000 29999' datatype='integer' name='[f_20000_29999]' role='measure' type='quantitative' />
      <column caption='F 30000 39999' datatype='integer' name='[f_30000_39999]' role='measure' type='quantitative' />
      <column caption='F 40000 49990' datatype='integer' name='[f_40000_49990]' role='measure' type='quantitative' />
      <column caption='F 4999 Less' datatype='integer' name='[f_4999_less]' role='measure' type='quantitative' />
      <column caption='F 50000 64999' datatype='integer' name='[f_50000_64999]' role='measure' type='quantitative' />
      <column caption='F 5000 9999' datatype='integer' name='[f_5000_9999]' role='measure' type='quantitative' />
      <column caption='F 65000 99999' datatype='integer' name='[f_65000_99999]' role='measure' type='quantitative' />
      <column caption='Females' datatype='integer' name='[females]' role='measure' type='quantitative' />
      <column caption='M 10000 19999' datatype='integer' name='[m_10000_19999]' role='measure' type='quantitative' />
      <column caption='m 100G more' datatype='integer' name='[m_100G_more]' role='measure' type='quantitative' />
      <column caption='M 20000 29999' datatype='integer' name='[m_20000_29999]' role='measure' type='quantitative' />
      <column caption='M 30000 39999' datatype='integer' name='[m_30000_39999]' role='measure' type='quantitative' />
      <column caption='M 40000 49999' datatype='integer' name='[m_40000_49999]' role='measure' type='quantitative' />
      <column caption='M 4999 Less' datatype='integer' name='[m_4999_less]' role='measure' type='quantitative' />
      <column caption='M 50000 64999' datatype='integer' name='[m_50000_64999]' role='measure' type='quantitative' />
      <column caption='M 5000 9999' datatype='integer' name='[m_5000_9999]' role='measure' type='quantitative' />
      <column caption='M 65000 99999' datatype='integer' name='[m_65000_99999]' role='measure' type='quantitative' />
      <column caption='Males' datatype='integer' name='[males]' role='measure' type='quantitative' />
      <column caption='Total' datatype='integer' name='[total]' role='measure' type='quantitative' />
      <group name='[max_high_income]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[State]' member='&quot;CA&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;CT&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;DC&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;MA&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;MD&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;NJ&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;NY&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;VA&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;WA&quot;' />
        </groupfilter>
      </group>
      <group name='[max_med_income]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[State]' member='&quot;AK&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;AL&quot;' />
          <groupfilter from='&quot;CO&quot;' function='range' level='[State]' to='&quot;DE&quot;' />
          <groupfilter from='&quot;GA&quot;' function='range' level='[State]' to='&quot;IA&quot;' />
          <groupfilter from='&quot;IL&quot;' function='range' level='[State]' to='&quot;MO&quot;' />
          <groupfilter from='&quot;ND&quot;' function='range' level='[State]' to='&quot;NJ&quot;' />
          <groupfilter from='&quot;NV&quot;' function='range' level='[State]' to='&quot;OH&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;PA&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;RI&quot;' />
          <groupfilter from='&quot;TX&quot;' function='range' level='[State]' to='&quot;WY&quot;' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.126253' group-percentage='0.0841683' measure-ordering='alphabetic' measure-percentage='0.789579' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='&quot;ninaxhua/s-17-dv-final-project&quot;' inline='true' name='federated.1lsi2ia03jhh1912or5np12xaj0j' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='&quot;ninaxhua/s-17-dv-final-project&quot;' name='webdata-direct.1438r1i11hxkc215248ir1v1bfov'>
            <connection APIVersion='' authType='none' authentication='no' channel='https' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;ninaxhua/s-17-dv-final-project&quot;,&quot;apiToken&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50Om5pbmF4aHVhIiwiaXNzIjoiYWdlbnQ6bmluYXhodWE6OjA0NWI4YjAyLTIwYTQtNDUxYS04OGU2LWM3NmE3NmE2ZGQwMSIsImlhdCI6MTQ4NDY5NzI2Mywicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.oR5oYAnEwkPvtYZHfBNAkElmuZqjuljc-2vNv62tYUWqTsgOti9nPtuuWJASeB71pmZaYb4JHVu1J1ysHSkchg&quot;}' connectionName='&quot;ninaxhua/s-17-dv-final-project&quot;' filename='' increment-key='' path='/' port='443' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='' username='' usernameAlias='' />
          </named-connection>
        </named-connections>
        <relation connection='webdata-direct.1438r1i11hxkc215248ir1v1bfov' name='Death' table='[Death]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0]</local-name>
            <parent-name>[Death]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_1]</local-name>
            <parent-name>[Death]</parent-name>
            <remote-alias>AreaName</remote-alias>
            <ordinal>1</ordinal>
            <caption>AreaName</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_2]</local-name>
            <parent-name>[Death]</parent-name>
            <remote-alias>edu.total</remote-alias>
            <ordinal>2</ordinal>
            <caption>edu.total</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_3]</local-name>
            <parent-name>[Death]</parent-name>
            <remote-alias>edu.males</remote-alias>
            <ordinal>3</ordinal>
            <caption>edu.males</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_4]</local-name>
            <parent-name>[Death]</parent-name>
            <remote-alias>edu.females</remote-alias>
            <ordinal>4</ordinal>
            <caption>edu.females</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_5]</local-name>
            <parent-name>[Death]</parent-name>
            <remote-alias>m_no_school</remote-alias>
            <ordinal>5</ordinal>
            <caption>m_no_school</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_6</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_6]</local-name>
            <parent-name>[Death]</parent-name>
            <remote-alias>m_hs</remote-alias>
            <ordinal>6</ordinal>
            <caption>m_hs</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_7</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_7]</local-name>
            <parent-name>[Death]</parent-name>
            <remote-alias>m_bs</remote-alias>
            <ordinal>7</ordinal>
            <caption>m_bs</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_8</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_8]</local-name>
            <parent-name>[Death]</parent-name>
            <remote-alias>m_ms</remote-alias>
            <ordinal>8</ordinal>
            <caption>m_ms</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_9</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_9]</local-name>
            <parent-name>[Death]</parent-name>
            <remote-alias>m_phd</remote-alias>
            <ordinal>9</ordinal>
            <caption>m_phd</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_10</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_10]</local-name>
            <parent-name>[Death]</parent-name>
            <remote-alias>f_no_school</remote-alias>
            <ordinal>10</ordinal>
            <caption>f_no_school</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_11</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_11]</local-name>
            <parent-name>[Death]</parent-name>
            <remote-alias>f_hs</remote-alias>
            <ordinal>11</ordinal>
            <caption>f_hs</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_12</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_12]</local-name>
            <parent-name>[Death]</parent-name>
            <remote-alias>f_bs</remote-alias>
            <ordinal>12</ordinal>
            <caption>f_bs</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_13</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_13]</local-name>
            <parent-name>[Death]</parent-name>
            <remote-alias>f_ms</remote-alias>
            <ordinal>13</ordinal>
            <caption>f_ms</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_14</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_14]</local-name>
            <parent-name>[Death]</parent-name>
            <remote-alias>f_phd</remote-alias>
            <ordinal>14</ordinal>
            <caption>f_phd</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_15</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_15]</local-name>
            <parent-name>[Death]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>15</ordinal>
            <caption>year</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_16</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_16]</local-name>
            <parent-name>[Death]</parent-name>
            <remote-alias>cause</remote-alias>
            <ordinal>16</ordinal>
            <caption>cause</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_17</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_17]</local-name>
            <parent-name>[Death]</parent-name>
            <remote-alias>amt_death</remote-alias>
            <ordinal>17</ordinal>
            <caption>amt_death</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_18</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_18]</local-name>
            <parent-name>[Death]</parent-name>
            <remote-alias>AADR</remote-alias>
            <ordinal>18</ordinal>
            <caption>AADR</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='State' datatype='string' name='[v_0]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='f_no_school' datatype='integer' name='[v_10]' role='measure' type='quantitative' />
      <column caption='f_hs' datatype='integer' name='[v_11]' role='measure' type='quantitative' />
      <column caption='f_bs' datatype='integer' name='[v_12]' role='measure' type='quantitative' />
      <column caption='f_ms' datatype='integer' name='[v_13]' role='measure' type='quantitative' />
      <column caption='f_phd' datatype='integer' name='[v_14]' role='measure' type='quantitative' />
      <column caption='year' datatype='string' name='[v_15]' role='dimension' type='nominal' />
      <column caption='cause' datatype='string' name='[v_16]' role='dimension' type='nominal' />
      <column caption='amt_death' datatype='integer' name='[v_17]' role='measure' type='quantitative' />
      <column caption='AADR' datatype='real' name='[v_18]' role='measure' type='quantitative' />
      <column caption='AreaName' datatype='string' name='[v_1]' role='dimension' type='nominal' />
      <column caption='edu.total' datatype='integer' name='[v_2]' role='measure' type='quantitative' />
      <column caption='edu.males' datatype='integer' name='[v_3]' role='measure' type='quantitative' />
      <column caption='edu.females' datatype='integer' name='[v_4]' role='measure' type='quantitative' />
      <column caption='m_no_school' datatype='integer' name='[v_5]' role='measure' type='quantitative' />
      <column caption='m_hs' datatype='integer' name='[v_6]' role='measure' type='quantitative' />
      <column caption='m_bs' datatype='integer' name='[v_7]' role='measure' type='quantitative' />
      <column caption='m_ms' datatype='integer' name='[v_8]' role='measure' type='quantitative' />
      <column caption='m_phd' datatype='integer' name='[v_9]' role='measure' type='quantitative' />
      <group name='[max_low_income]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[v_0]' member='&quot;IA&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;ID&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;IN&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;ME&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;MI&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;MT&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;OH&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;OR&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;PR&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;UT&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;VT&quot;' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/Nina/Documents/My Tableau Repository/Datasources/federated.1lsi2ia03jhh1912or5np12xaj0j_0v2exps00bwu2b11o5z5f005vzmx.tde' schema='Extract' tablename='Extract' update-time='05/02/2017 01:14:23 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='13261' timestamp-start='2017-05-02 01:14:23.014' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>v_0</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_0</remote-alias>
              <ordinal>0</ordinal>
              <family>Death</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>53</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>13006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_10</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_10</remote-alias>
              <ordinal>1</ordinal>
              <family>Death</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>429</statistic>
                <statistic aggregation='Max' datatype='integer'>354478</statistic>
                <statistic aggregation='Count' datatype='integer'>13006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_11</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_11]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_11</remote-alias>
              <ordinal>2</ordinal>
              <family>Death</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>44607</statistic>
                <statistic aggregation='Max' datatype='integer'>2620705</statistic>
                <statistic aggregation='Count' datatype='integer'>13006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_12</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_12]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_12</remote-alias>
              <ordinal>3</ordinal>
              <family>Death</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>33530</statistic>
                <statistic aggregation='Max' datatype='integer'>2595236</statistic>
                <statistic aggregation='Count' datatype='integer'>13006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_13</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_13]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_13</remote-alias>
              <ordinal>4</ordinal>
              <family>Death</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>13224</statistic>
                <statistic aggregation='Max' datatype='integer'>1027818</statistic>
                <statistic aggregation='Count' datatype='integer'>13006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_14</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_14]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_14</remote-alias>
              <ordinal>5</ordinal>
              <family>Death</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1632</statistic>
                <statistic aggregation='Max' datatype='integer'>150396</statistic>
                <statistic aggregation='Count' datatype='integer'>13006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_15</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_15]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_15</remote-alias>
              <ordinal>6</ordinal>
              <family>Death</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1999&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;2013&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>13260</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;2006&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_16</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_16]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_16</remote-alias>
              <ordinal>7</ordinal>
              <family>Death</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;All Causes&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Unintentional Injuries&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>13260</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_17</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_17]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_17</remote-alias>
              <ordinal>8</ordinal>
              <family>Death</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5314</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>10</statistic>
                <statistic aggregation='Max' datatype='integer'>2596993</statistic>
                <statistic aggregation='Count' datatype='integer'>13245</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_18</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_18]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_18</remote-alias>
              <ordinal>9</ordinal>
              <family>Death</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6338</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.29</statistic>
                <statistic aggregation='Max' datatype='real'>1087.3</statistic>
                <statistic aggregation='Count' datatype='integer'>13155</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_1</remote-alias>
              <ordinal>10</ordinal>
              <family>Death</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>53</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>13261</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_2</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_2</remote-alias>
              <ordinal>11</ordinal>
              <family>Death</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>384272</statistic>
                <statistic aggregation='Max' datatype='integer'>25257858</statistic>
                <statistic aggregation='Count' datatype='integer'>13006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_3</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_3</remote-alias>
              <ordinal>12</ordinal>
              <family>Death</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>193776</statistic>
                <statistic aggregation='Max' datatype='integer'>12336347</statistic>
                <statistic aggregation='Count' datatype='integer'>13006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_4</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_4</remote-alias>
              <ordinal>13</ordinal>
              <family>Death</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>190496</statistic>
                <statistic aggregation='Max' datatype='integer'>12921511</statistic>
                <statistic aggregation='Count' datatype='integer'>13006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_5</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_5</remote-alias>
              <ordinal>14</ordinal>
              <family>Death</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>620</statistic>
                <statistic aggregation='Max' datatype='integer'>298039</statistic>
                <statistic aggregation='Count' datatype='integer'>13006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_6</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_6</remote-alias>
              <ordinal>15</ordinal>
              <family>Death</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>37090</statistic>
                <statistic aggregation='Max' datatype='integer'>2611119</statistic>
                <statistic aggregation='Count' datatype='integer'>13006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_7</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_7</remote-alias>
              <ordinal>16</ordinal>
              <family>Death</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>32257</statistic>
                <statistic aggregation='Max' datatype='integer'>2407360</statistic>
                <statistic aggregation='Count' datatype='integer'>13006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_8</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_8</remote-alias>
              <ordinal>17</ordinal>
              <family>Death</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>10277</statistic>
                <statistic aggregation='Max' datatype='integer'>937187</statistic>
                <statistic aggregation='Count' datatype='integer'>13006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_9</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_9</remote-alias>
              <ordinal>18</ordinal>
              <family>Death</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2848</statistic>
                <statistic aggregation='Max' datatype='integer'>237397</statistic>
                <statistic aggregation='Count' datatype='integer'>13006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.335463' group-percentage='0.0734824' measure-ordering='alphabetic' measure-percentage='0.591054' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Blend-lowincome-aadr'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;ninaxhua/s-17-dv-final-project&quot;' name='federated.1lsi2ia03jhh1912or5np12xaj0j' />
            <datasource caption='earnings' name='federated.1v0zsd21b8h22n115t9go18ntkcy' />
          </datasources>
          <datasource-dependencies datasource='federated.1lsi2ia03jhh1912or5np12xaj0j'>
            <column-instance column='[max_low_income]' derivation='InOut' name='[io:max_low_income:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0]' derivation='None' name='[none:v_0:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[v_0]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='AADR' datatype='real' name='[v_18]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1v0zsd21b8h22n115t9go18ntkcy'>
            <column caption='total_4999Less' datatype='real' name='[Calculation_165648025905897472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([f_4999_less]+[m_4999_less])/[total]' />
            </column>
            <column caption='F 4999 Less' datatype='integer' name='[f_4999_less]' role='measure' type='quantitative' />
            <column caption='M 4999 Less' datatype='integer' name='[m_4999_less]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_165648025905897472]' derivation='Sum' name='[sum:Calculation_165648025905897472:qk]' pivot='key' type='quantitative' />
            <column caption='Total' datatype='integer' name='[total]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lsi2ia03jhh1912or5np12xaj0j].[none:v_0:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:v_0:nk]' />
              <groupfilter function='member' level='[none:v_0:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lsi2ia03jhh1912or5np12xaj0j].[none:v_0:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' x-axis-name='[federated.1lsi2ia03jhh1912or5np12xaj0j].[sum:v_18:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' x-axis-name='[federated.1v0zsd21b8h22n115t9go18ntkcy].[sum:Calculation_165648025905897472:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1lsi2ia03jhh1912or5np12xaj0j].[none:v_0:nk]</rows>
        <cols>([federated.1lsi2ia03jhh1912or5np12xaj0j].[sum:v_18:qk] + [federated.1v0zsd21b8h22n115t9go18ntkcy].[sum:Calculation_165648025905897472:qk])</cols>
        <pages>
          <column>[federated.1lsi2ia03jhh1912or5np12xaj0j].[io:max_low_income:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='blend-highincome-aadr'>
      <table>
        <view>
          <datasources>
            <datasource caption='earnings' name='federated.1v0zsd21b8h22n115t9go18ntkcy' />
            <datasource caption='&quot;ninaxhua/s-17-dv-final-project&quot;' name='federated.1lsi2ia03jhh1912or5np12xaj0j' />
          </datasources>
          <datasource-dependencies datasource='federated.1lsi2ia03jhh1912or5np12xaj0j'>
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column caption='AADR' datatype='real' name='[v_18]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1v0zsd21b8h22n115t9go18ntkcy'>
            <column caption='total_100G' datatype='real' name='[Calculation_165648025906401281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([m_100G_more]+[f_100G_more])/[total]' />
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='f 100G more' datatype='integer' name='[f_100G_more]' role='measure' type='quantitative' />
            <column-instance column='[max_high_income]' derivation='InOut' name='[io:max_high_income:nk]' pivot='key' type='nominal' />
            <column caption='m 100G more' datatype='integer' name='[m_100G_more]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_165648025906401281]' derivation='Sum' name='[sum:Calculation_165648025906401281:qk]' pivot='key' type='quantitative' />
            <column caption='Total' datatype='integer' name='[total]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' x-axis-name='[federated.1lsi2ia03jhh1912or5np12xaj0j].[sum:v_18:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' x-axis-name='[federated.1v0zsd21b8h22n115t9go18ntkcy].[sum:Calculation_165648025906401281:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1v0zsd21b8h22n115t9go18ntkcy].[none:State:nk]</rows>
        <cols>([federated.1lsi2ia03jhh1912or5np12xaj0j].[sum:v_18:qk] + [federated.1v0zsd21b8h22n115t9go18ntkcy].[sum:Calculation_165648025906401281:qk])</cols>
        <pages>
          <column>[federated.1v0zsd21b8h22n115t9go18ntkcy].[io:max_high_income:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='blend-medincome-aadr'>
      <table>
        <view>
          <datasources>
            <datasource caption='earnings' name='federated.1v0zsd21b8h22n115t9go18ntkcy' />
            <datasource caption='&quot;ninaxhua/s-17-dv-final-project&quot;' name='federated.1lsi2ia03jhh1912or5np12xaj0j' />
          </datasources>
          <datasource-dependencies datasource='federated.1lsi2ia03jhh1912or5np12xaj0j'>
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column caption='AADR' datatype='real' name='[v_18]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1v0zsd21b8h22n115t9go18ntkcy'>
            <column caption='total_50k_64999' datatype='real' name='[Calculation_165648025907011586]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([m_50000_64999]+[f_50000_64999])/[total]' />
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='F 50000 64999' datatype='integer' name='[f_50000_64999]' role='measure' type='quantitative' />
            <column-instance column='[max_med_income]' derivation='InOut' name='[io:max_med_income:nk]' pivot='key' type='nominal' />
            <column caption='M 50000 64999' datatype='integer' name='[m_50000_64999]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_165648025907011586]' derivation='Sum' name='[sum:Calculation_165648025907011586:qk]' pivot='key' type='quantitative' />
            <column caption='Total' datatype='integer' name='[total]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' x-axis-name='[federated.1lsi2ia03jhh1912or5np12xaj0j].[sum:v_18:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' x-axis-name='[federated.1v0zsd21b8h22n115t9go18ntkcy].[sum:Calculation_165648025907011586:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1v0zsd21b8h22n115t9go18ntkcy].[none:State:nk]</rows>
        <cols>([federated.1lsi2ia03jhh1912or5np12xaj0j].[sum:v_18:qk] + [federated.1v0zsd21b8h22n115t9go18ntkcy].[sum:Calculation_165648025907011586:qk])</cols>
        <pages>
          <column>[federated.1v0zsd21b8h22n115t9go18ntkcy].[io:max_med_income:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='Blend-lowincome-aadr'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>false</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1lsi2ia03jhh1912or5np12xaj0j].[sum:v_18:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1lsi2ia03jhh1912or5np12xaj0j].[none:v_0:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1lsi2ia03jhh1912or5np12xaj0j].[io:max_low_income:nk]</field>
                  <field>[federated.1lsi2ia03jhh1912or5np12xaj0j].[none:v_0:nk]</field>
                  <field>[federated.1lsi2ia03jhh1912or5np12xaj0j].[sum:v_18:qk]</field>
                  <field>[federated.1v0zsd21b8h22n115t9go18ntkcy].[sum:Calculation_165648025905897472:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>false</value>
                <value>&quot;MS&quot;</value>
                <value>27595.299999999999</value>
                <value>0.11679490923713404</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' name='blend-medincome-aadr'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>true</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='blend-highincome-aadr'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>true</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Blend-lowincome-aadr' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='blend-highincome-aadr' width='384'>
      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
      yv8DhN1ilAh4+lYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='blend-medincome-aadr' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
